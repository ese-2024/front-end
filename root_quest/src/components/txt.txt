import { ChangeEvent, useState } from 'react';
import Check from '../../../public/icons/Check';
import { postCheckAnswer } from '../../integration/CheckAnswer';

interface ListItem {
    text: string;
}

interface CardTaskI {
    description: string;
    items?: ListItem[];
    questId: number;
    onAcceptChange: (accept: boolean) => void; // Add this line
    onError: (error: boolean) => void;
}


function CardTask({description, questId, onAcceptChange, onError } : CardTaskI) {

    const [accept , setAccept] = useState(false);
    const [answer, setAnswer] = useState<string>('');
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState(false);

    const handleAnswer = (event: ChangeEvent<HTMLInputElement>) => {
        setAnswer(event.target.value);
    };

    const handleCheck = async () => {
        setLoading(true);
        try {
          await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate delay
          const response = await postCheckAnswer({ stepId: questId, submittedAnswer: answer });
          setAccept(true);
          onAcceptChange(true); // Call the callback with the new state
          onError(false)
        } catch (error) {
          setError(true);
          onAcceptChange(false); // Call the callback with the new state
          onError(true)
        } finally {
          setLoading(false);
        }
      };

    return (
        <div className="w-full">
            <div className="flex items-center justify-between"> 
                <p className="font-chakra-medium text-xl text-hulk">Pr√°tica:</p>
                <Check fill={ accept ? '#BBFF34' : '#fff'}/>
            </div>
            <div className="w-full mt-2 flex items-center flex-col bg-colorPopup rounded-lg">
                <p className="w-[96%] font-chakra-regular text-textC text-lg mt-4 mb-5">{description}</p>
                <div className="flex items-center justify-between w-[96%] gap-x-10"> 
                    <input type='text' className="w-3/4 h-9 flex items-center bg-colorSide rounded-md border-[1px] border-lineBorder font-chakra-regular text-textC px-8 mb-6 focus:outline-none" value={answer} onChange={handleAnswer}></input>
                    <button className="w-1/4 h-9 uppercase text-lg bg-colorSide rounded-md border-[1px] border-lineBorder font-chakra-regular text-hulk hover:bg-colorPopup transition-all ease-in-out mb-6" onClick={handleCheck} disabled={loading}>
                        {loading ? 'Checking...' : 'Check'}
                    </button>
                </div>
            </div>
        </div>
    )
}

export default CardTask;